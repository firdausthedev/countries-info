{"version":3,"sources":["components/Card.js","components/Search.js","App.js","actions.js","reducers.js","index.js"],"names":["CardStyle","styled","div","Card","countryInfo","useState","showMore","setShowMore","src","flag","alt","onClick","document","title","name","id","capital","region","population","toLocaleString","languages","map","l","index","key","length","InputStyle","Search","inputValue","onChange","type","value","placeholder","GlobalStyle","createGlobalStyle","AppStyle","CardListStyle","connect","state","searchField","loading","dispatch","e","payload","target","setLoading","isLoading","countriesName","setCountriesName","useEffect","getCountriesNames","a","axios","get","res","data","console","log","filteredCountriesName","filter","c","toLowerCase","includes","initialState","logger","createLogger","store","createStore","action","applyMiddleware","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.10eb12e2.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Card = ({ countryInfo }) => {\r\n  const [showMore, setShowMore] = useState(false);\r\n\r\n  const displayMore = () => {\r\n    setShowMore(!showMore);\r\n    document.title = 'Countries-Info | ' + countryInfo.name;\r\n  };\r\n\r\n  return (\r\n    <CardStyle>\r\n      <img src={countryInfo.flag} alt='flag' onClick={displayMore} />\r\n      <p id='country-name'>{countryInfo.name}</p>\r\n\r\n      {showMore && (\r\n        <>\r\n          <p>Capital : {countryInfo.capital}</p>\r\n          <p>Region : {countryInfo.region}</p>\r\n          <p>Populations : {countryInfo.population.toLocaleString()}</p>\r\n          <p>\r\n            Languages :{' '}\r\n            {countryInfo.languages.map((l, index) => (\r\n              <span key={index}>\r\n                {l.name}\r\n                {index < countryInfo.languages.length - 1 && ', '}\r\n              </span>\r\n            ))}\r\n          </p>\r\n        </>\r\n      )}\r\n    </CardStyle>\r\n  );\r\n};\r\n\r\nconst CardStyle = styled.div`\r\n  background-color: #e5c0a1;\r\n  padding: 1rem 2rem;\r\n  border-radius: 10px;\r\n  margin: 10px;\r\n  color: black;\r\n  transition: 0.35s;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n\r\n  :hover {\r\n    transform: scale(1.1);\r\n  }\r\n  img {\r\n    max-width: 9rem;\r\n    cursor: pointer;\r\n  }\r\n\r\n  #country-name {\r\n    font-weight: 600;\r\n    font-size: 1.2rem;\r\n  }\r\n`;\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Search = ({ inputValue, onChange }) => {\r\n  return (\r\n    <InputStyle>\r\n      <input type='text' name='name' value={inputValue} onChange={onChange} placeholder='Enter a name...' />\r\n    </InputStyle>\r\n  );\r\n};\r\nconst InputStyle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 1rem;\r\n\r\n  input {\r\n    width: 60%;\r\n    height: 3rem;\r\n    border-radius: 10px;\r\n    border: none;\r\n    padding-left: 1rem;\r\n    font-family: 'Manrope', sans-serif;\r\n    outline: none;\r\n    background-color: #f8f4e0;\r\n  }\r\n`;\r\nexport default Search;\r\n","/* eslint-disable no-labels */\nimport React, { useState, useEffect } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { connect } from 'react-redux';\nimport Card from './components/Card';\nimport Search from './components/Search';\nimport axios from 'axios';\nimport { setSearchField, setLoading } from './actions';\n\nconst mapStateToProps = (state) => {\n  return {\n    searchField: state.searchField,\n    loading: state.loading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onChange: (e) => dispatch(setSearchField(e.target.value)),\n    setLoading: (isLoading) => dispatch(setLoading(isLoading)),\n  };\n};\n\nfunction App({ searchField, onChange, setLoading, loading }) {\n  const [countriesName, setCountriesName] = useState([]);\n\n  useEffect(() => {\n    getCountriesNames();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getCountriesNames = async () => {\n    setLoading(true);\n    try {\n      const res = await axios.get(`https://restcountries.eu/rest/v2/all`);\n      setCountriesName(res.data);\n      setLoading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const filteredCountriesName = countriesName.filter(\n    (c) => c.name.toLowerCase().includes(searchField.toLowerCase()) || c.name.includes(searchField) // filtered whether user typed with lowercase or uppercase\n  );\n\n  return (\n    <AppStyle>\n      <GlobalStyle />\n      <h1>Countries Info</h1>\n      <Search inputValue={searchField} onChange={onChange} />\n      <CardListStyle>\n        {!loading ? filteredCountriesName.map((c, index) => <Card key={index} countryInfo={c} />) : <h2>Loading...</h2>}\n        {!filteredCountriesName.length && !loading && <p>No country found..</p>}\n      </CardListStyle>\n    </AppStyle>\n  );\n}\n\nconst GlobalStyle = createGlobalStyle`\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n }\n\nbody {\n  font-family: 'Manrope', sans-serif;\n  background-color: #e5c0a1;\n  line-height: 1.2;\n}\n`;\n\nconst AppStyle = styled.div`\n  h1 {\n    text-align: center;\n    margin-top: 1rem;\n    color: #df3459;\n  }\n`;\n\nconst CardListStyle = styled.div`\n  background: #f0e9c9;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  padding: 2rem 2rem;\n  margin: 1rem 2rem;\n  border-radius: 10px;\n`;\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export const setSearchField = (text) => ({ type: 'CHANGE_SEARCH_FIELD', payload: text });\r\nexport const setLoading = (isLoading) => ({ type: 'CHANGE_LOADING', payload: isLoading });\r\n","const initialState = {\r\n  searchField: '',\r\n  loading: false,\r\n};\r\n\r\nexport const searchCountries = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case 'CHANGE_SEARCH_FIELD':\r\n      return { ...state, searchField: action.payload };\r\n    case 'CHANGE_LOADING':\r\n      return { ...state, loading: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createLogger } from 'redux-logger';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { searchCountries } from './reducers';\n\nconst logger = createLogger();\nconst store = createStore(searchCountries, applyMiddleware(logger));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}