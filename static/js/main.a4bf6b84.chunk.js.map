{"version":3,"sources":["components/Card.js","components/Search.js","components/Pagination.js","App.js","actions.js","reducers.js","index.js"],"names":["CardStyle","styled","div","Card","countryInfo","useState","showMore","setShowMore","src","flag","alt","onClick","document","title","name","id","capital","region","population","toLocaleString","languages","map","l","index","key","length","InputStyle","Search","inputValue","onChange","type","value","placeholder","PaginationStyle","Pagination","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","_","range","page","className","GlobalStyle","createGlobalStyle","AppStyle","CardListStyle","connect","state","searchField","loading","dispatch","e","payload","target","setLoading","isLoading","countriesList","setCountriesName","setCurrentPage","useEffect","getCountriesNames","a","axios","get","res","data","console","log","filteredCountriesName","filter","c","toLowerCase","includes","numOfCountries","startIndex","newCountriesList","slice","take","initialState","logger","createLogger","store","createStore","action","applyMiddleware","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a4bf6b84.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Card = ({ countryInfo }) => {\r\n  const [showMore, setShowMore] = useState(false);\r\n\r\n  const displayMore = () => {\r\n    setShowMore(!showMore);\r\n    document.title = 'Countries-Info | ' + countryInfo.name;\r\n  };\r\n\r\n  return (\r\n    <CardStyle>\r\n      <img src={countryInfo.flag} alt='flag' onClick={displayMore} />\r\n      <p id='country-name'>{countryInfo.name}</p>\r\n\r\n      {showMore && (\r\n        <>\r\n          <p>Capital : {countryInfo.capital}</p>\r\n          <p>Region : {countryInfo.region}</p>\r\n          <p>Populations : {countryInfo.population.toLocaleString()}</p>\r\n          <p>\r\n            Languages :{' '}\r\n            {countryInfo.languages.map((l, index) => (\r\n              <span key={index}>\r\n                {l.name}\r\n                {index < countryInfo.languages.length - 1 && ', '}\r\n              </span>\r\n            ))}\r\n          </p>\r\n        </>\r\n      )}\r\n    </CardStyle>\r\n  );\r\n};\r\n\r\nconst CardStyle = styled.div`\r\n  background-color: #e5c0a1;\r\n  padding: 1rem 2rem;\r\n  border-radius: 10px;\r\n  margin: 10px;\r\n  color: black;\r\n  transition: 0.35s;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n\r\n  :hover {\r\n    transform: scale(1.1);\r\n  }\r\n  img {\r\n    max-width: 9rem;\r\n    cursor: pointer;\r\n  }\r\n\r\n  #country-name {\r\n    font-weight: 600;\r\n    font-size: 1.2rem;\r\n  }\r\n`;\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Search = ({ inputValue, onChange }) => {\r\n  return (\r\n    <InputStyle>\r\n      <input type='text' name='name' value={inputValue} onChange={onChange} placeholder='Enter a name...' />\r\n    </InputStyle>\r\n  );\r\n};\r\nconst InputStyle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 1rem;\r\n\r\n  input {\r\n    width: 60%;\r\n    height: 3rem;\r\n    border-radius: 10px;\r\n    border: none;\r\n    padding-left: 1rem;\r\n    font-family: 'Manrope', sans-serif;\r\n    outline: none;\r\n    background-color: #f8f4e0;\r\n  }\r\n`;\r\nexport default Search;\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport styled from 'styled-components';\r\n\r\nconst Pagination = ({ length, pageSize, currentPage, onPageChange }) => {\r\n  const pagesCount = Math.ceil(length / pageSize);\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1);\r\n  return (\r\n    <PaginationStyle>\r\n      <ul>\r\n        {pages.map((page) => (\r\n          <li key={page}>\r\n            <button onClick={() => onPageChange(page)} className={page === currentPage ? 'active' : ''}>\r\n              {page}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </PaginationStyle>\r\n  );\r\n};\r\n\r\nconst PaginationStyle = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 1rem;\r\n\r\n  ul {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n\r\n    list-style-type: none;\r\n\r\n    li button {\r\n      border: none;\r\n      background: hsl(49, 57%, 86%);\r\n      padding: 1rem 2rem;\r\n      font-family: 'Manrope', sans-serif;\r\n      outline: none;\r\n\r\n      :hover {\r\n        background: hsla(49, 57%, 86%, 0.4);\r\n      }\r\n    }\r\n  }\r\n\r\n  .active {\r\n    background: hsl(347, 73%, 54%);\r\n    color: white;\r\n    :hover {\r\n      background: hsla(347, 73%, 54%, 0.6);\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Pagination;\r\n","/* eslint-disable no-labels */\r\nimport React, { useState, useEffect } from 'react';\r\nimport styled, { createGlobalStyle } from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport Card from './components/Card';\r\nimport Search from './components/Search';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { setSearchField, setLoading } from './actions';\r\nimport Pagination from './components/Pagination';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    searchField: state.searchField,\r\n    loading: state.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onChange: (e) => {\r\n      dispatch(setSearchField(e.target.value));\r\n    },\r\n\r\n    setLoading: (isLoading) => dispatch(setLoading(isLoading)),\r\n  };\r\n};\r\n\r\nfunction App({ searchField, onChange, setLoading, loading }) {\r\n  const [countriesList, setCountriesName] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const PAGE_SIZE = 50;\r\n\r\n  useEffect(() => {\r\n    getCountriesNames();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const getCountriesNames = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.get(`https://restcountries.eu/rest/v2/all`);\r\n      setCountriesName(res.data);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const filteredCountriesName = countriesList.filter(\r\n    (c) => c.name.toLowerCase().includes(searchField.toLowerCase()) || c.name.includes(searchField) // filtered whether user typed with lowercase or uppercase\r\n  );\r\n\r\n  const numOfCountries = filteredCountriesName.length;\r\n  const startIndex = (currentPage - 1) * PAGE_SIZE;\r\n  let newCountriesList = _(filteredCountriesName).slice(startIndex).take(PAGE_SIZE).value();\r\n  if (filteredCountriesName.length < 50 && newCountriesList.length < 50) {\r\n    newCountriesList = _(filteredCountriesName).slice(0).take(PAGE_SIZE).value();\r\n  }\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  return (\r\n    <AppStyle>\r\n      <GlobalStyle />\r\n      <h1>Countries Info</h1>\r\n      <Search inputValue={searchField} onChange={onChange} />\r\n      <CardListStyle>\r\n        {!loading ? newCountriesList.map((c, index) => <Card key={index} countryInfo={c} />) : <h2>Loading...</h2>}\r\n        {!newCountriesList.length && !loading && <p>No country found..</p>}\r\n      </CardListStyle>\r\n      <Pagination\r\n        length={numOfCountries}\r\n        pageSize={PAGE_SIZE}\r\n        onPageChange={handlePageChange}\r\n        currentPage={currentPage}\r\n      />\r\n    </AppStyle>\r\n  );\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n* {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n }\r\n\r\nbody {\r\n  font-family: 'Manrope', sans-serif;\r\n  background-color: #e5c0a1;\r\n  line-height: 1.2;\r\n}\r\n`;\r\n\r\nconst AppStyle = styled.div`\r\n  h1 {\r\n    text-align: center;\r\n    margin-top: 1rem;\r\n    color: #df3459;\r\n  }\r\n`;\r\n\r\nconst CardListStyle = styled.div`\r\n  background: #f0e9c9;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  padding: 2rem 2rem;\r\n  margin: 1rem 2rem;\r\n  border-radius: 10px;\r\n`;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","export const setSearchField = (text) => ({ type: 'CHANGE_SEARCH_FIELD', payload: text });\r\nexport const setLoading = (isLoading) => ({ type: 'CHANGE_LOADING', payload: isLoading });\r\n","const initialState = {\r\n  searchField: '',\r\n  loading: false,\r\n};\r\n\r\nexport const searchCountries = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case 'CHANGE_SEARCH_FIELD':\r\n      return { ...state, searchField: action.payload };\r\n    case 'CHANGE_LOADING':\r\n      return { ...state, loading: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createLogger } from 'redux-logger';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { searchCountries } from './reducers';\n\nconst logger = createLogger();\nconst store = createStore(searchCountries, applyMiddleware(logger));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}