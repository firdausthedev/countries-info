{"version":3,"sources":["components/Card.js","components/Search.js","components/Pagination.js","App.js","actions.js","components/constants.js","reducers.js","index.js"],"names":["CardStyle","styled","div","Card","countryInfo","useState","showMore","setShowMore","src","flag","alt","onClick","document","title","name","id","capital","region","population","toLocaleString","languages","map","l","index","key","length","InputStyle","Search","inputValue","onChange","type","value","placeholder","PaginationStyle","Pagination","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","_","range","page","className","GlobalStyle","createGlobalStyle","AppStyle","CardListStyle","connect","state","searchField","searchCountries","isPending","requestCountries","countries","error","pageNumber","changePageNumber","dispatch","e","payload","target","setCurrentPage","setPageNumber","onRequestCountries","a","axios","get","res","data","console","log","props","useEffect","filteredCountriesName","filter","c","toLowerCase","includes","numOfCountries","startIndex","newCountriesList","slice","take","initialStateSearch","initialStatePage","initialStateCountries","logger","createLogger","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleWare","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bc21929b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Card = ({ countryInfo }) => {\r\n  const [showMore, setShowMore] = useState(false);\r\n\r\n  const displayMore = () => {\r\n    setShowMore(!showMore);\r\n    document.title = 'Countries-Info | ' + countryInfo.name;\r\n  };\r\n\r\n  return (\r\n    <CardStyle>\r\n      <img src={countryInfo.flag} alt='flag' onClick={displayMore} />\r\n      <p id='country-name'>{countryInfo.name}</p>\r\n\r\n      {showMore && (\r\n        <>\r\n          <p>Capital : {countryInfo.capital}</p>\r\n          <p>Region : {countryInfo.region}</p>\r\n          <p>Populations : {countryInfo.population.toLocaleString()}</p>\r\n          <p>\r\n            Languages :{' '}\r\n            {countryInfo.languages.map((l, index) => (\r\n              <span key={index}>\r\n                {l.name}\r\n                {index < countryInfo.languages.length - 1 && ', '}\r\n              </span>\r\n            ))}\r\n          </p>\r\n        </>\r\n      )}\r\n    </CardStyle>\r\n  );\r\n};\r\n\r\nconst CardStyle = styled.div`\r\n  background-color: #e5c0a1;\r\n  padding: 1rem 2rem;\r\n  border-radius: 10px;\r\n  margin: 10px;\r\n  color: black;\r\n  transition: 0.35s;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n\r\n  :hover {\r\n    transform: scale(1.1);\r\n  }\r\n  img {\r\n    max-width: 9rem;\r\n    cursor: pointer;\r\n  }\r\n\r\n  #country-name {\r\n    font-weight: 600;\r\n    font-size: 1.2rem;\r\n  }\r\n`;\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Search = ({ inputValue, onChange }) => {\r\n  return (\r\n    <InputStyle>\r\n      <input type='text' name='name' value={inputValue} onChange={onChange} placeholder='Enter a name...' />\r\n    </InputStyle>\r\n  );\r\n};\r\nconst InputStyle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 1rem;\r\n\r\n  input {\r\n    width: 60%;\r\n    height: 3rem;\r\n    border-radius: 10px;\r\n    border: none;\r\n    padding-left: 1rem;\r\n    font-family: 'Manrope', sans-serif;\r\n    outline: none;\r\n    background-color: #f8f4e0;\r\n  }\r\n`;\r\nexport default Search;\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport styled from 'styled-components';\r\n\r\nconst Pagination = ({ length, pageSize, currentPage, onPageChange }) => {\r\n  const pagesCount = Math.ceil(length / pageSize);\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1);\r\n  return (\r\n    <PaginationStyle>\r\n      <ul>\r\n        {pages.map((page) => (\r\n          <li key={page}>\r\n            <button onClick={() => onPageChange(page)} className={page === currentPage ? 'active' : ''}>\r\n              {page}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </PaginationStyle>\r\n  );\r\n};\r\n\r\nconst PaginationStyle = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 1rem;\r\n\r\n  ul {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n\r\n    list-style-type: none;\r\n\r\n    li button {\r\n      border: none;\r\n      background: hsl(49, 57%, 86%);\r\n      padding: 1rem 2rem;\r\n      font-family: 'Manrope', sans-serif;\r\n      outline: none;\r\n\r\n      :hover {\r\n        background: hsla(49, 57%, 86%, 0.4);\r\n      }\r\n    }\r\n  }\r\n\r\n  .active {\r\n    background: hsl(347, 73%, 54%);\r\n    color: white;\r\n    :hover {\r\n      background: hsla(347, 73%, 54%, 0.6);\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Pagination;\r\n","/* eslint-disable no-labels */\r\nimport React, { useEffect } from 'react';\r\nimport styled, { createGlobalStyle } from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport Card from './components/Card';\r\nimport Search from './components/Search';\r\nimport _ from 'lodash';\r\nimport { setSearchField, setPageNumber, requestCountries } from './actions';\r\nimport Pagination from './components/Pagination';\r\n\r\nconst PAGE_SIZE = 50;\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    searchField: state.searchCountries.searchField,\r\n    isPending: state.requestCountries.isPending,\r\n    countries: state.requestCountries.countries,\r\n    error: state.requestCountries.error,\r\n    pageNumber: state.changePageNumber.pageNumber,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onChange: (e) => dispatch(setSearchField(e.target.value)),\r\n    setCurrentPage: (pageNumber) => dispatch(setPageNumber(pageNumber)),\r\n    onRequestCountries: () => dispatch(requestCountries()),\r\n  };\r\n};\r\n\r\nfunction App(props) {\r\n  const { searchField, onChange, setCurrentPage, pageNumber, onRequestCountries, countries, isPending } = props;\r\n  useEffect(() => {\r\n    onRequestCountries();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const filteredCountriesName = countries.filter(\r\n    (c) => c.name.toLowerCase().includes(searchField.toLowerCase()) || c.name.includes(searchField) // filtered whether user typed with lowercase or uppercase\r\n  );\r\n\r\n  const numOfCountries = filteredCountriesName.length;\r\n  const startIndex = (pageNumber - 1) * PAGE_SIZE;\r\n  let newCountriesList = _(filteredCountriesName).slice(startIndex).take(PAGE_SIZE).value();\r\n  if (filteredCountriesName.length < 50 && newCountriesList.length < 50) {\r\n    newCountriesList = _(filteredCountriesName).slice(0).take(PAGE_SIZE).value();\r\n  }\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  return (\r\n    <AppStyle>\r\n      <GlobalStyle />\r\n      <h1>Countries Info</h1>\r\n      <Search inputValue={searchField} onChange={onChange} />\r\n      <CardListStyle>\r\n        {!isPending ? newCountriesList.map((c, index) => <Card key={index} countryInfo={c} />) : <h2>Loading...</h2>}\r\n        {!newCountriesList.length && !isPending && <p>No country found..</p>}\r\n      </CardListStyle>\r\n      <Pagination\r\n        length={numOfCountries}\r\n        pageSize={PAGE_SIZE}\r\n        onPageChange={handlePageChange}\r\n        currentPage={pageNumber}\r\n      />\r\n    </AppStyle>\r\n  );\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n* {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n }\r\n\r\nbody {\r\n  font-family: 'Manrope', sans-serif;\r\n  background-color: #e5c0a1;\r\n  line-height: 1.2;\r\n}\r\n`;\r\n\r\nconst AppStyle = styled.div`\r\n  h1 {\r\n    text-align: center;\r\n    margin-top: 1rem;\r\n    color: #df3459;\r\n  }\r\n`;\r\n\r\nconst CardListStyle = styled.div`\r\n  background: #f0e9c9;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  padding: 2rem 2rem;\r\n  margin: 1rem 2rem;\r\n  border-radius: 10px;\r\n`;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import {\r\n  CHANGE_SEARCH_FIELD,\r\n  CHANGE_PAGE_NUMBER,\r\n  REQUEST_COUNTRIES_PENDING,\r\n  REQUEST_COUNTRIES_SUCCESS,\r\n  REQUEST_COUNTRIES_FAILED,\r\n} from './components/constants';\r\nimport axios from 'axios';\r\n\r\nexport const setSearchField = (text) => ({ type: CHANGE_SEARCH_FIELD, payload: text });\r\n\r\nexport const setPageNumber = (pageNumber) => ({ type: CHANGE_PAGE_NUMBER, payload: pageNumber });\r\n\r\nexport const requestCountries = () => async (dispatch) => {\r\n  dispatch({ type: REQUEST_COUNTRIES_PENDING });\r\n\r\n  try {\r\n    const res = await axios.get(`https://restcountries.eu/rest/v2/all`);\r\n    dispatch({ type: REQUEST_COUNTRIES_SUCCESS, payload: res.data });\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({ type: REQUEST_COUNTRIES_FAILED, payload: err });\r\n  }\r\n};\r\n","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\nexport const CHANGE_PAGE_NUMBER = 'CHANGE_PAGE_NUMBER';\r\n\r\nexport const REQUEST_COUNTRIES_PENDING = 'REQUEST_COUNTRIES_PENDING';\r\nexport const REQUEST_COUNTRIES_SUCCESS = 'REQUEST_COUNTRIES_SUCCESS';\r\nexport const REQUEST_COUNTRIES_FAILED = 'REQUEST_COUNTRIES_FAILED';\r\n","import {\r\n  CHANGE_SEARCH_FIELD,\r\n  CHANGE_PAGE_NUMBER,\r\n  REQUEST_COUNTRIES_PENDING,\r\n  REQUEST_COUNTRIES_SUCCESS,\r\n  REQUEST_COUNTRIES_FAILED,\r\n} from './components/constants';\r\n\r\nconst initialStateSearch = {\r\n  searchField: '',\r\n};\r\n\r\nexport const searchCountries = (state = initialStateSearch, action = {}) => {\r\n  switch (action.type) {\r\n    case CHANGE_SEARCH_FIELD:\r\n      return { ...state, searchField: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialStatePage = {\r\n  pageNumber: 1,\r\n};\r\n\r\nexport const changePageNumber = (state = initialStatePage, action = {}) => {\r\n  switch (action.type) {\r\n    case CHANGE_PAGE_NUMBER:\r\n      return { ...state, pageNumber: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialStateCountries = {\r\n  isPending: false,\r\n  countries: [],\r\n  error: '',\r\n};\r\n\r\nexport const requestCountries = (state = initialStateCountries, action = {}) => {\r\n  switch (action.type) {\r\n    case REQUEST_COUNTRIES_PENDING:\r\n      return { ...state, isPending: true };\r\n    case REQUEST_COUNTRIES_SUCCESS:\r\n      return { ...state, countries: action.payload, isPending: false };\r\n    case REQUEST_COUNTRIES_FAILED:\r\n      return { ...state, error: action.payload, isPending: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createLogger } from 'redux-logger';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunkMiddleWare from 'redux-thunk';\nimport { searchCountries, requestCountries, changePageNumber } from './reducers';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({ searchCountries, requestCountries, changePageNumber });\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleWare, logger));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}